---
import type { Config } from '@/types'
import { BackgroundFactory } from '@/components/BackgroundFactory'
import { ButtonContainer } from '@/components/ButtonContainer'
import { ErrorPage } from '@/components/ErrorPage'
import { Footer } from '@/components/Footer'
import { ModeToggle } from '@/components/ModeToggle'
import { UserContainer } from '@/components/UserContainer'
import { ConfigError, getConfig } from '@/lib/config'
import Layout from '../layouts/Layout.astro'

import '../styles/globals.css'

// Constants
const DEFAULT_ERROR_CONFIG: Config = {
  title: 'Error - Shako',
  background: 'none',
  lanyardUrl: '',
  footer: true,
}

// Load configuration
let config: Config
let error: string | undefined

try {
  config = await getConfig()
}
 catch (e) {
  error = e instanceof ConfigError ? e.message : 'Failed to load configuration'
  config = DEFAULT_ERROR_CONFIG
}
---

<Layout title={config.title}>
  {
  error
    ? <ErrorPage client:load error={error} />
    : (
      <main class="items-center justify-center p-4">
        <BackgroundFactory
          client:only="react"
          background={config.background}
          backgroundImage={config.backgroundImage}
          backgroundColor={config.backgroundColor}
          backgroundGradient={config.backgroundGradient}
          customCSS={config.customCSS}
        />

        <div class="absolute right-0 top-0 p-4">
          <ModeToggle client:only="react" />
        </div>

        <div class="m-auto max-w-md">
          <div class="mb-6">
            <UserContainer client:load config={config} />
          </div>

          <div class="mb-6">
            <ButtonContainer client:load config={config} />
          </div>
        </div>

        <Footer footerConfig={config.footer || true} />
      </main>
    )
}
</Layout>
